openapi: 3.1.0
x-stoplight:
  id: bv8z7mj7mwxvx
info:
  title: file-browser-api
  version: '1.0'
  contact:
    name: Collecthor B.V.
    url: 'http://collecthor.nl'
    email: info@collecthor.nl
  description: The spec that a simple file browser backend must implement
servers:
  - url: 'http://127.0.0.1:3100'
    description: Mock server
  - url: 'https://collecthor.test/v2/file-manager'
    description: Local dev
paths:
  /view:
    post:
      summary: View
      operationId: post-view
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/Node.json
              examples:
                Example 1:
                  value:
                    - name: Example 1
                      icon: 'https://icon.com/file.png'
                      filename: readme.md
                      type: file
                      path: readme.md
                      size: 150
                      mimeType: text/markdown
                      permissions:
                        read: true
                        write: true
                        create: false
                        delete: true
            application/xml:
              schema:
                type: array
                items:
                  $ref: ./models/Node.json
      description: View all files(and folders) in a path
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/Path.json
            examples:
              Root directory:
                value: ""
              Nested:
                value: some/nested/directory
        description: ''
      parameters: []
      tags:
        - file-browser
      x-internal: false
  /url:
    post:
      summary: View
      operationId: post-url
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/PublicUri.json
              examples:
                Example 1:
                  value: 
                    readme:
                      filename: readme.md
                      type: file
                      path: /readme.md
                      size: 150
                      mimetype: text/markdown
                      permissions:
                        read: true
                        write: true
                        create: false
                        delete: true
      description: Retrieves / generates a publicly accessible URL for the file
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/PathRequest.json
            examples:
              Root directory:
                value:
                  path: ""
              Nested:
                value:
                  path: some/nested/directory
        description: ''
      parameters: []
      tags:
        - file-browser
      x-internal: false
    parameters: []
  /create:
    post:
      summary: Create
      operationId: post-create
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/Node.json
      description: Create a file or folder at the specified path
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/CreateRequest.json
        description: Create a file or folder on the filesystem
      tags:
        - file-browser
  /delete:
    post:
      summary: Delete file
      operationId: post-delete
      responses:
        '200':
          description: OK
      description: Delete a file or folder from the filesystem
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/PathRequest.json
            examples:
              Example 1:
                value:
                  path: test
      tags:
        - file-browser
  /move:
    post:
      summary: Move file
      operationId: post-move
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/Node.json
      description: Move a file on the filesystem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                source:
                  $ref: ./models/Path.json
                destination:
                  $ref: ./models/Path.json
              required:
                - source
                - destination
        description: ''
      tags:
        - file-browser
  /copy:
    post:
      summary: Copy file
      operationId: post-copy
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/Node.json
      description: Move a file on the filesystem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                source:
                  $ref: ./models/Path.json
                destination:
                  $ref: ./models/Path.json
              required:
                - source
                - destination
        description: ''
      tags:
        - file-browser
    parameters: []
components:
  schemas: {}
  securitySchemes:
    api:
      type: http
      scheme: bearer
tags:
  - name: file-browser
